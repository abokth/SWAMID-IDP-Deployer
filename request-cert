#!/bin/bash

set -e

altnamefile="subjaltnames"
installname="localhost"

errx() {
    trap - EXIT
    echo >&2 "$@"
    exit 1
}

usage() {
    echo ""
    echo " $0 [--extra-cert <shortname>]"
    echo ""
    echo " Use --extra-cert to manage multiple certs on this machine."
    echo ""
}

if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    usage
    exit 0
fi

if [[ "$1" == "--extra-cert" ]]; then
    shift; extra="$1"; shift
    altnamefile="subjaltnames.$extra"
    installname="extra-$extra"
fi

for d in /etc/pki/tls /etc/ssl; do
    if [[ -d "$d" ]]; then
	installdir="$d"
	break;
    fi
done

if [[ -z "$d" ]]; then
    errx "No certificate install directory found. Install your distros SSL tools. (yum install ca-certificates)"
fi

basedir="$(cd "$(dirname "$0")" && pwd)"
if [[ -r "${basedir}/config" ]]; then
	. "${basedir}/config"
	certO="$certOrg"
fi
t="${idpurl#*://}"
idphostname="${t%/*}"

ipaddrs=$(ip addr show scope global | sed -nre 's,^ +inet[^ ]* ([^ /]+)(|/[^ ]+) .*$,\1,p;')
v4addr=$(dig +short $(hostname) IN A) || :
v6addr=$(dig +short $(hostname) IN AAAA) || :
for addr in $idphostname $v6addr $v4addr $ipaddrs; do
    if fqdndot=$(dig +short -x $addr) && [[ -n "$fqdndot" ]]; then
	if host "$fqdndot" >/dev/null 2>&1; then
	    hostname="${fqdndot%.}"
	    break
	fi
    fi
done

if [[ -z "$hostname" ]]; then
    errx "Could not determine hostname. Set hostname to a FQDN or configure a search domain in resolver configuration first."
fi

if [[ -z "$extra" ]] && ! ( ping -c 2 -w 2 $hostname || ping6 -c 2 -w 2 $hostname ) >/dev/null 2>&1; then
    errx "Could not ping or ping6 our hostname $hostname. That can't be right."
fi

if [[ -z "$extra" ]] && ! host $hostname. >/dev/null 2>&1; then
    errx "Could not look up our hostname $hostname in DNS. It must be a FQDN."
fi

names_from_http=$(cat /etc/httpd/conf.d/*.conf /etc/apache2/* /etc/apache2/*/* 2>/dev/null|sed -n 's,#.*,,; s/^[ \t]*ServerName[ \t][ \t]*//p;'|cut -d: -f1|sort -u)
if [ -e "$installdir"/certs/localhost.crt ]; then
    names_from_cert=$(openssl x509 -in "$installdir"/certs/localhost.crt -noout -text|fgrep -A 1 'X509v3 Subject Alternative Name'|tail -1|tr ', \t' '\n\n\n'|sed -n 's/^DNS://p;')
fi

mcd() {
    mkdir -p "$1"
    chmod 700 "$1"
    cd "$1"
}

has_name() {
    subjaltnames=$(cat "$altnamefile")
    for altname in $subjaltnames; do
	if [[ "$altname" = "$addname" ]]; then
	    return 0
	fi
    done
    return 1
}

add_name() {
    local addname="$1"
    if [ ! -e "$altnamefile" ]; then
	if [[ -z "$extra" ]]; then
            echo $hostname >"$altnamefile"
	else
            echo -n "" >"$altnamefile"
	fi
    fi
    if ! has_name "$addname"; then
	echo -n "Do you want to add the name $addname ? (y/n) "
	read ans
	if [[ "$ans" != "y" ]]; then
	    echo "Not adding $addname."
	    return
	fi
	echo "$addname" >>"$altnamefile"
    fi
}

# Can we get SUNET TCS certificates for $org.se?
if [[ "$hostname" == *.se ]]; then
    org="${hostname%.se}"
    org="${org##*.}"
    if [[ -n "$org" ]]; then
	if curl --insecure --silent "https://tcs.sunet.se/apply/$org/"|fgrep -i '<form ' >/dev/null; then
	    sunettcsorg="$org"
	fi
    fi
fi

if [[ -n "$sunettcsorg" ]]; then
    mcd /root/certs/sunet-tcs
    echo "== SUNET TCS for $sunettcsorg =="
else
    mcd /root/certs/requests
fi

if [[ -z "$certC" ]]; then
    cc=$(tr '[[:lower:]]' '[[:upper:]]' <<<"${hostname##*.}")
    if [[ "$cc" == ?? ]]; then
	certC="$cc"
    fi
fi

while [[ -z "$certC" ]]; do
    echo -n "Country code (C): [SE, GB, ...] > "
    read certC
done
echo "Country (C) is set to: $certC"
while [[ -z "$certO" ]]; do
    echo -n "Organization (O): [Kungliga Tekniska hÃ¶gskolan, ...] > "
    read certO
done
echo "Organization (O) is set to: $certO"
while [[ -z "$certOU" ]]; do
    echo -n "Organizational Unit (OU): [ITA, CSC, ...] > "
    read certOU
done
echo "Organizational Unit (OU) is set to: $certOU"

# Make sure hostname is first.
if [[ -z "$extra" ]]; then
    if [[ -e "$altnamefile" ]]; then
	if [[ $(head -1 subjaltnames) != $hostname ]]; then
	    mv "$altnamefile" "$altnamefile".old
	    old_names=$(cat "$altnamefile".old)
	fi
    fi
fi

if [[ -n "$extra" ]]; then
    add_name $extra
fi
if [[ $hostname != "$extra" ]]; then
    add_name $hostname
fi
for name in $(for n in $old_names $names_from_http $names_from_cert; do echo $n; done | sort -u); do
    if [[ $name != "$extra" && $name != $hostname ]]; then
	add_name $name
    fi
done

echo "This is the current list of aliases:"
echo ""
cat "$altnamefile"
echo ""
echo "If that is ok, press Return. If you need to edit it, press Ctrl-C and edit"
echo "$PWD/$altnamefile"
echo "and then rerun this command."
read dummy

cn=$(head -1 "$altnamefile")
certname=$cn-$(date '+%F-%T')
if [[ -n "$extra" ]]; then
    certname=extra-$extra-$(date '+%F-%T')
fi

echo "Updating $certname.conf..."

cat >$certname.conf <<EOF
[req]
default_bits = 4096
prompt = no
encrypt_key = no
default_md = sha256
distinguished_name = dn
utf8 = yes
req_extensions = v3_req

[ v3_req ]
subjectAltName          = @alt_names

[ dn ]
C = $certC
O = $certO
OU = $certOU
CN = $cn

[alt_names]
EOF

declare -i dnsnum=1
for altname in $(cat "$altnamefile"); do
    echo "DNS.$dnsnum = $altname" >>$certname.conf
    ((dnsnum+=1))
done

if [[ -n "$extra" ]]; then
    echo "$extra" >$certname.extra
fi

echo "Creating a certificate signing request..."
if [ -L "$installdir"/private/"$installname".key ] && oldkeyfile=$(readlink "$installdir"/private/"$installname".key) && [[ . == "$(dirname "$oldkeyfile")" ]] && [ -e "$oldkeyfile" ] && (( $(openssl rsa -in "$oldkeyfile" -noout -text|sed -nre 's,^Private-Key:\s*\(([0-9]+) bit\).*$,\1,p;') >= 4096 )); then
    openssl req -new -config $certname.conf -key $oldkeyfile -out $certname.csr
    ln -s $oldkeyfile $certname.key
else
    if [[ -e "$installdir"/private/"$installname".key ]]; then
	echo "Notice: Generating a new private key, a service restart will be required when installing the new certificate."
    fi
    openssl req -new -config $certname.conf -keyout $certname.key -out $certname.csr
    chmod 400 $certname.key
fi

echo ""
if [[ -n "$sunettcsorg" ]]; then
    echo " STEP 1"
    echo "Go to: https://tcs.sunet.se/apply/$sunettcsorg/"

    echo ""
    echo " STEP 2"
    echo "Paste this into the big box on the web page:"
    cat $certname.csr
    echo "Then fill out the rest of the form and submit it."

    echo ""
    echo " STEP 3"
    echo "Wait for the mail with the certificate, copy the URL from that mail and run:"
    echo "install-cert <the url from the mail>"
else
    echo "Contact your certificate authority and ask them to sign this CSR:"
    echo ""
    cat $certname.csr
    echo ""
    echo "Then run 'install-cert' to install the signed certificate."
fi

cat >>"${basedir}/config" <<EOM
certOrg="${certO}"
certC="${certC}"
certCN="$cn"
EOM
